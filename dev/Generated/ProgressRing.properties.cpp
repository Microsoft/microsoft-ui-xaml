// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ProgressRing.h"

CppWinRTActivatableClassWithDPFactory(ProgressRing)

GlobalDependencyProperty ProgressRingProperties::s_PlaceholderProperty{ nullptr };

ProgressRingProperties::ProgressRingProperties()
{
    EnsureProperties();
}

void ProgressRingProperties::EnsureProperties()
{
    if (!s_PlaceholderProperty)
    {
        s_PlaceholderProperty =
            InitializeDependencyProperty(
                L"Placeholder",
                winrt::name_of<winrt::IInspectable>(),
                winrt::name_of<winrt::ProgressRing>(),
                false /* isAttached */,
                ValueHelper<winrt::IInspectable>::BoxedDefaultValue(),
                nullptr);
    }
}

void ProgressRingProperties::ClearProperties()
{
    s_PlaceholderProperty = nullptr;
}

void ProgressRingProperties::Placeholder(winrt::IInspectable const& value)
{
    static_cast<ProgressRing*>(this)->SetValue(s_PlaceholderProperty, ValueHelper<winrt::IInspectable>::BoxValueIfNecessary(value));
}

winrt::IInspectable ProgressRingProperties::Placeholder()
{
    return ValueHelper<winrt::IInspectable>::CastOrUnbox(static_cast<ProgressRing*>(this)->GetValue(s_PlaceholderProperty));
}
