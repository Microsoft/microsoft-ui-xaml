// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "HamburgerAnimatedIconSource.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(HamburgerAnimatedIconSource)
}

#include "HamburgerAnimatedIconSource.g.cpp"

GlobalDependencyProperty HamburgerAnimatedIconSourceProperties::s_IsActiveProperty{ nullptr };

HamburgerAnimatedIconSourceProperties::HamburgerAnimatedIconSourceProperties()
{
    EnsureProperties();
}

void HamburgerAnimatedIconSourceProperties::EnsureProperties()
{
    AnimatedIconSource::EnsureProperties();
    if (!s_IsActiveProperty)
    {
        s_IsActiveProperty =
            InitializeDependencyProperty(
                L"IsActive",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::HamburgerAnimatedIconSource>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxValueIfNecessary(true),
                winrt::PropertyChangedCallback(&OnIsActivePropertyChanged));
    }
}

void HamburgerAnimatedIconSourceProperties::ClearProperties()
{
    s_IsActiveProperty = nullptr;
    AnimatedIconSource::ClearProperties();
}

void HamburgerAnimatedIconSourceProperties::OnIsActivePropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::HamburgerAnimatedIconSource>();
    winrt::get_self<HamburgerAnimatedIconSource>(owner)->OnIsActivePropertyChanged(args);
}

void HamburgerAnimatedIconSourceProperties::IsActive(bool value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<HamburgerAnimatedIconSource*>(this)->SetValue(s_IsActiveProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
    }
}

bool HamburgerAnimatedIconSourceProperties::IsActive()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<HamburgerAnimatedIconSource*>(this)->GetValue(s_IsActiveProperty));
}
