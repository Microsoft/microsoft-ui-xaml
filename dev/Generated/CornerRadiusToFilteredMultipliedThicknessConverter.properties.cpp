// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "CornerRadiusToFilteredMultipliedThicknessConverter.h"

namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    CppWinRTActivatableClassWithDPFactory(CornerRadiusToFilteredMultipliedThicknessConverter)
}

#include "CornerRadiusToFilteredMultipliedThicknessConverter.g.cpp"

GlobalDependencyProperty CornerRadiusToFilteredMultipliedThicknessConverterProperties::s_MultiplierProperty{ nullptr };
GlobalDependencyProperty CornerRadiusToFilteredMultipliedThicknessConverterProperties::s_SideProperty{ nullptr };

CornerRadiusToFilteredMultipliedThicknessConverterProperties::CornerRadiusToFilteredMultipliedThicknessConverterProperties()
{
    EnsureProperties();
}

void CornerRadiusToFilteredMultipliedThicknessConverterProperties::EnsureProperties()
{
    if (!s_MultiplierProperty)
    {
        s_MultiplierProperty =
            InitializeDependencyProperty(
                L"Multiplier",
                winrt::name_of<double>(),
                winrt::name_of<winrt::CornerRadiusToFilteredMultipliedThicknessConverter>(),
                false /* isAttached */,
                ValueHelper<double>::BoxValueIfNecessary(1.0f),
                nullptr);
    }
    if (!s_SideProperty)
    {
        s_SideProperty =
            InitializeDependencyProperty(
                L"Side",
                winrt::name_of<winrt::CornerRadiusToThicknessSide>(),
                winrt::name_of<winrt::CornerRadiusToFilteredMultipliedThicknessConverter>(),
                false /* isAttached */,
                ValueHelper<winrt::CornerRadiusToThicknessSide>::BoxValueIfNecessary(winrt::CornerRadiusToThicknessSide::Left),
                nullptr);
    }
}

void CornerRadiusToFilteredMultipliedThicknessConverterProperties::ClearProperties()
{
    s_MultiplierProperty = nullptr;
    s_SideProperty = nullptr;
}

void CornerRadiusToFilteredMultipliedThicknessConverterProperties::Multiplier(double value)
{
    static_cast<CornerRadiusToFilteredMultipliedThicknessConverter*>(this)->SetValue(s_MultiplierProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double CornerRadiusToFilteredMultipliedThicknessConverterProperties::Multiplier()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<CornerRadiusToFilteredMultipliedThicknessConverter*>(this)->GetValue(s_MultiplierProperty));
}

void CornerRadiusToFilteredMultipliedThicknessConverterProperties::Side(winrt::CornerRadiusToThicknessSide const& value)
{
    static_cast<CornerRadiusToFilteredMultipliedThicknessConverter*>(this)->SetValue(s_SideProperty, ValueHelper<winrt::CornerRadiusToThicknessSide>::BoxValueIfNecessary(value));
}

winrt::CornerRadiusToThicknessSide CornerRadiusToFilteredMultipliedThicknessConverterProperties::Side()
{
    return ValueHelper<winrt::CornerRadiusToThicknessSide>::CastOrUnbox(static_cast<CornerRadiusToFilteredMultipliedThicknessConverter*>(this)->GetValue(s_SideProperty));
}
