// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "CornerRadiusFilterConverter.h"

CppWinRTActivatableClassWithDPFactory(CornerRadiusFilterConverter)

GlobalDependencyProperty CornerRadiusFilterConverterProperties::s_FilterProperty{ nullptr };
GlobalDependencyProperty CornerRadiusFilterConverterProperties::s_ReturnAsDoubleProperty{ nullptr };

CornerRadiusFilterConverterProperties::CornerRadiusFilterConverterProperties()
{
    EnsureProperties();
}

void CornerRadiusFilterConverterProperties::EnsureProperties()
{
    if (!s_FilterProperty)
    {
        s_FilterProperty =
            InitializeDependencyProperty(
                L"Filter",
                winrt::name_of<winrt::CornerRadiusFilterKind>(),
                winrt::name_of<winrt::CornerRadiusFilterConverter>(),
                false /* isAttached */,
                ValueHelper<winrt::CornerRadiusFilterKind>::BoxValueIfNecessary(winrt::CornerRadiusFilterKind::None),
                nullptr);
    }
    if (!s_ReturnAsDoubleProperty)
    {
        s_ReturnAsDoubleProperty =
            InitializeDependencyProperty(
                L"ReturnAsDouble",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::CornerRadiusFilterConverter>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxValueIfNecessary(false),
                nullptr);
    }
}

void CornerRadiusFilterConverterProperties::ClearProperties()
{
    s_FilterProperty = nullptr;
    s_ReturnAsDoubleProperty = nullptr;
}

void CornerRadiusFilterConverterProperties::Filter(winrt::CornerRadiusFilterKind const& value)
{
    static_cast<CornerRadiusFilterConverter*>(this)->SetValue(s_FilterProperty, ValueHelper<winrt::CornerRadiusFilterKind>::BoxValueIfNecessary(value));
}

winrt::CornerRadiusFilterKind CornerRadiusFilterConverterProperties::Filter()
{
    return ValueHelper<winrt::CornerRadiusFilterKind>::CastOrUnbox(static_cast<CornerRadiusFilterConverter*>(this)->GetValue(s_FilterProperty));
}

void CornerRadiusFilterConverterProperties::ReturnAsDouble(bool value)
{
    static_cast<CornerRadiusFilterConverter*>(this)->SetValue(s_ReturnAsDoubleProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
}

bool CornerRadiusFilterConverterProperties::ReturnAsDouble()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<CornerRadiusFilterConverter*>(this)->GetValue(s_ReturnAsDoubleProperty));
}
