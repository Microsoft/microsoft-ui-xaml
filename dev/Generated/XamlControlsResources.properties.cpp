// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "XamlControlsResources.h"

CppWinRTActivatableClassWithDPFactory(XamlControlsResources)

GlobalDependencyProperty XamlControlsResourcesProperties::s_UseCompactDictionaryProperty{ nullptr };

XamlControlsResourcesProperties::XamlControlsResourcesProperties()
{
    EnsureProperties();
}

void XamlControlsResourcesProperties::EnsureProperties()
{
    if (!s_UseCompactDictionaryProperty)
    {
        s_UseCompactDictionaryProperty =
            InitializeDependencyProperty(
                L"UseCompactDictionary",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::XamlControlsResources>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxValueIfNecessary(false),
                winrt::PropertyChangedCallback(&OnUseCompactDictionaryPropertyChanged));
    }
}

void XamlControlsResourcesProperties::ClearProperties()
{
    s_UseCompactDictionaryProperty = nullptr;
}

void XamlControlsResourcesProperties::OnUseCompactDictionaryPropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::XamlControlsResources>();
    winrt::get_self<XamlControlsResources>(owner)->OnPropertyChanged(args);
}

void XamlControlsResourcesProperties::UseCompactDictionary(bool value)
{
    static_cast<XamlControlsResources*>(this)->SetValue(s_UseCompactDictionaryProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
}

bool XamlControlsResourcesProperties::UseCompactDictionary()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<XamlControlsResources*>(this)->GetValue(s_UseCompactDictionaryProperty));
}
