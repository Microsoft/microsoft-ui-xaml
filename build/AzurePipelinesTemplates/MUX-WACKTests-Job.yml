parameters:
  name: 'WACKTests'
  dependsOn: ''
  artifactName: 'NugetPkgTestsDrop'
  matrix:
    Release_x86:
      buildPlatform: 'x86'
      buildConfiguration: 'Release'
    Release_x64:
      buildPlatform: 'x64'
      buildConfiguration: 'Release'
    Release_Arm:
      buildPlatform: 'arm'
      buildConfiguration: 'Release'
jobs:
- job: ${{ parameters.name }}
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    name: Package ES Lab E
  strategy:
    maxParallel: 10
    matrix: ${{ parameters.matrix }}

  variables:
    artifactDownloadPath: $(Build.SourcesDirectory)\Artifacts
    appxPackagesPath: $(artifactDownloadPath)\${{parameters.artifactName}}\$(buildConfiguration)\$(buildPlatform)\AppxPackages
    resultLogStagingPath: $(Build.ArtifactStagingDirectory)\Results\WACKTestResults-$(buildConfiguration)-$(buildPlatform)
      
  steps:

  - task: DownloadBuildArtifacts@0 
    inputs: 
      artifactName: ${{ parameters.artifactName }} 
      downloadPath: '$(artifactDownloadPath)'

  - task: PkgESWACKTests@12
    displayName: Run WACK tests for NugetPackageTestApp
    inputs:
      PackageFilePath: '$(appxPackagesPath)\NugetPackageTestApp_Test\NugetPackageTestApp.appx'
      TestIDs: 38
      ExcludeTestIDs: true

  - task: CopyFiles@2
    displayName: 'Copy'
    condition: succeededOrFailed()
    inputs:
      sourceFolder: $(appxPackagesPath)\NugetPackageTestApp_Test\
      contents: '*.xml'
      targetFolder: $(resultLogStagingPath)

  - task: PkgESWACKTests@12
    displayName: Run WACK tests for AppThatUsesMUXIndirectly
    condition: succeededOrFailed()
    inputs:
      PackageFilePath: '$(appxPackagesPath)\AppThatUsesMUXIndirectly_Test\AppThatUsesMUXIndirectly.appx'
      TestIDs: 38
      ExcludeTestIDs: true

  - task: CopyFiles@2
    displayName: 'Copy'
    condition: succeededOrFailed()
    inputs:
      sourceFolder: $(appxPackagesPath)\AppThatUsesMUXIndirectly_Test\
      contents: '*.xml'
      targetFolder: $(resultLogStagingPath)

  - task: PublishBuildArtifacts@1
    displayName: Publish results
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)\Results
      artifactName: ${{ parameters.artifactName }}